/**
 * @name GrammarCorrection
 * @description Corrects grammar in messages.
 * @version 1.0.0
 * @author Space
 */

const { Plugin } = BdApi;
const LanguageToolApi = 'https://api.languagetoolplus.com/v2/check';

module.exports = class GrammarCorrection extends Plugin {
    onStart() {
        BdApi.showToast('GrammarCorrection plugin loaded');
        this.patchMessageSend();
    }

    onStop() {
        BdApi.showToast('GrammarCorrection plugin stopped');
    }

    patchMessageSend() {
        const MessageEvents = BdApi.findModuleByProps('sendMessage', 'editMessage');
        BdApi.Patcher.instead('GrammarCorrection', MessageEvents, 'sendMessage', async (_, [channelId, message]) => {
            const correctedText = await this.correctGrammar(message.content);
            message.content = correctedText;
            return BdApi.findModuleByProps('sendMessage').sendMessage(channelId, message);
        });
    }

    async correctGrammar(text) {
        try {
            const response = await fetch(LanguageToolApi, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: new URLSearchParams({
                    language: 'en-US',
                    text
                })
            });

            const result = await response.json();
            if (result.matches.length > 0) {
                result.matches.forEach(match => {
                    if (match.replacements.length > 0) {
                        text = text.replace(match.context.text.slice(match.context.offset, match.context.offset + match.context.length), match.replacements[0].value);
                    }
                });
            }
            return text;
        } catch (error) {
            console.error('Error correcting grammar:', error);
            return text;
        }
    }
};
